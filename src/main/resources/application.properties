# 配置端口号
#server.port=80
server.port=8012
# 配置ip地址
#server.address=127.0.0.1
# 配置项目名称
#server.context-path=/hframe

# 是否开启验证码校验，开发环境下可关闭（如果为false，则跳过所有使用RootUtils.checkVerifyCode()方法的验证码校验）
hframe.verify-code=false
# 是否打印异常信息，开发环境下建议开启
hframe.exception.print=true
# 文件/图片上传、日志输出文件夹（注意，此处请使用正斜杠/，系统会根据不同系统自动转换）
hframe.web.root-path=E:/hframe/
#hframe.web.root-path=/usr/local/hframes/


############ thymeleaf ##################################################################
#thymeleaf start
# 严格的html5格式
#spring.thymeleaf.mode=HTML5
# 不太严格的HTML格式
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/
#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
#静态资源路径
# 静态文件请求匹配方式
spring.mvc.static-path-pattern=/**

# 修改默认的静态寻址资源目录
#spring.resources.static-locations=classpath:templates/,file:${web.upload-path}
#thymeleaf end


############ spring  #######################################################################
# 编码格式配置
spring.http.encoding.charset=UTF-8
spring.http.encoding.enable=true
spring.http.encoding.force=true
# 文件上传配置（最大文件大小）
spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=100Mb
# session超时时间（秒）
server.session.timeout=1200
# 指定日期格式
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# 设定系统日期格式
spring.mvc.date-format=yyyy-MM-dd HH:mm:ss


########## 配置 druid 数据库连接池 #############################################################
# 数据库访问配置
# 数据库类型
#spring.mybatis.database.type=ORACLE
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driverClass=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@120.77.80.120:1521:xe
#spring.datasource.username=
#spring.datasource.password=

spring.datasource.driverClass=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/HFrames?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true
#spring.datasource.url=jdbc:mysql://localhost:3306/HFrames?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true&autoReconnect=true&failOverReadOnly=false
spring.datasource.url=jdbc:mysql://120.77.80.120:3306/HFrames?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true&autoReconnect=true&failOverReadOnly=false
spring.datasource.username=$(AE49C3141F412F1E78853CAF203B4D97)
#spring.datasource.password=$(CEBC3A7E9890481B2FB3EE287CD1B666)
spring.datasource.password=$(E48F07C2497A2EDEA928709C23CE8C47)


# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=90000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=28000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j,wallFilter
spring.datasource.logSlowSql=true


########### 日志配置 ###########################################################################

# 日志文件输出到指定目录下
logging.file=${hframe.web.root-path}logs/hframes.log
# root日志以INFO级别输出
#logging.level.root=INFO
# com.frame 包下所有class以DEBUG级别输出（控制台打印 mybatis 查询语句）
logging.level.com.hframe=DEBUG
